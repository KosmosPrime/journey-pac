plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	id 'idea'
}

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
	implementation project(":common")

	modImplementation "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:8.0.0" // same as OPaC
	modImplementation "maven.modrinth:open-parties-and-claims:fabric-1.20.1-0.19.3"
	modApi("info.journeymap:journeymap-api:1.20-1.9-fabric-SNAPSHOT") {changing = true}
	modRuntimeOnly "maven.modrinth:journeymap:1.20.1-5.9.12-fabric"
}

loom {
	runs {
		client {
			client()
			setConfigName("Fabric Client")
			ideConfigGenerated(true)
			runDir("run")
		}

		remove server
	}
}
tasks.runServer.enabled = false

processResources {
	from project(":common").sourceSets.main.resources
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "mod_id": project.mod_id, "version": project.version,
			"mod_name": project.mod_name, "mod_author": project.mod_author
	}
}

tasks.withType(JavaCompile) {
	source(project(":common").sourceSets.main.allSource)
}
